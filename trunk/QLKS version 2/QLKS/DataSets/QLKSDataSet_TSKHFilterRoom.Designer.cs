//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QLKS.QLKSDataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("QLKSDataSet_TSKHFilterRoom")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class QLKSDataSet_TSKHFilterRoom : global::System.Data.DataSet {
        
        private QUOC_GIADataTable tableQUOC_GIA;
        
        private KHACH_HANGDataTable tableKHACH_HANG;
        
        private PHIEU_THUE_PHONGDataTable tablePHIEU_THUE_PHONG;
        
        private KHACH_TRODataTable tableKHACH_TRO;
        
        private PHONGDataTable tablePHONG;
        
        private LOAI_PHONGDataTable tableLOAI_PHONG;
        
        private global::System.Data.DataRelation relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA;
        
        private global::System.Data.DataRelation relationFK_KHACH_TR_TRO_KHACH_HA;
        
        private global::System.Data.DataRelation relationFK_KHACH_TR_TRO_PHIEU_TH;
        
        private global::System.Data.DataRelation relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA1;
        
        private global::System.Data.DataRelation relationFK_PHONG_PHONG_THU_LOAI_PHO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QLKSDataSet_TSKHFilterRoom() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected QLKSDataSet_TSKHFilterRoom(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["QUOC_GIA"] != null)) {
                    base.Tables.Add(new QUOC_GIADataTable(ds.Tables["QUOC_GIA"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["PHIEU_THUE_PHONG"] != null)) {
                    base.Tables.Add(new PHIEU_THUE_PHONGDataTable(ds.Tables["PHIEU_THUE_PHONG"]));
                }
                if ((ds.Tables["KHACH_TRO"] != null)) {
                    base.Tables.Add(new KHACH_TRODataTable(ds.Tables["KHACH_TRO"]));
                }
                if ((ds.Tables["PHONG"] != null)) {
                    base.Tables.Add(new PHONGDataTable(ds.Tables["PHONG"]));
                }
                if ((ds.Tables["LOAI_PHONG"] != null)) {
                    base.Tables.Add(new LOAI_PHONGDataTable(ds.Tables["LOAI_PHONG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUOC_GIADataTable QUOC_GIA {
            get {
                return this.tableQUOC_GIA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHACH_HANGDataTable KHACH_HANG {
            get {
                return this.tableKHACH_HANG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHIEU_THUE_PHONGDataTable PHIEU_THUE_PHONG {
            get {
                return this.tablePHIEU_THUE_PHONG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHACH_TRODataTable KHACH_TRO {
            get {
                return this.tableKHACH_TRO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHONGDataTable PHONG {
            get {
                return this.tablePHONG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_PHONGDataTable LOAI_PHONG {
            get {
                return this.tableLOAI_PHONG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            QLKSDataSet_TSKHFilterRoom cln = ((QLKSDataSet_TSKHFilterRoom)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["QUOC_GIA"] != null)) {
                    base.Tables.Add(new QUOC_GIADataTable(ds.Tables["QUOC_GIA"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["PHIEU_THUE_PHONG"] != null)) {
                    base.Tables.Add(new PHIEU_THUE_PHONGDataTable(ds.Tables["PHIEU_THUE_PHONG"]));
                }
                if ((ds.Tables["KHACH_TRO"] != null)) {
                    base.Tables.Add(new KHACH_TRODataTable(ds.Tables["KHACH_TRO"]));
                }
                if ((ds.Tables["PHONG"] != null)) {
                    base.Tables.Add(new PHONGDataTable(ds.Tables["PHONG"]));
                }
                if ((ds.Tables["LOAI_PHONG"] != null)) {
                    base.Tables.Add(new LOAI_PHONGDataTable(ds.Tables["LOAI_PHONG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableQUOC_GIA = ((QUOC_GIADataTable)(base.Tables["QUOC_GIA"]));
            if ((initTable == true)) {
                if ((this.tableQUOC_GIA != null)) {
                    this.tableQUOC_GIA.InitVars();
                }
            }
            this.tableKHACH_HANG = ((KHACH_HANGDataTable)(base.Tables["KHACH_HANG"]));
            if ((initTable == true)) {
                if ((this.tableKHACH_HANG != null)) {
                    this.tableKHACH_HANG.InitVars();
                }
            }
            this.tablePHIEU_THUE_PHONG = ((PHIEU_THUE_PHONGDataTable)(base.Tables["PHIEU_THUE_PHONG"]));
            if ((initTable == true)) {
                if ((this.tablePHIEU_THUE_PHONG != null)) {
                    this.tablePHIEU_THUE_PHONG.InitVars();
                }
            }
            this.tableKHACH_TRO = ((KHACH_TRODataTable)(base.Tables["KHACH_TRO"]));
            if ((initTable == true)) {
                if ((this.tableKHACH_TRO != null)) {
                    this.tableKHACH_TRO.InitVars();
                }
            }
            this.tablePHONG = ((PHONGDataTable)(base.Tables["PHONG"]));
            if ((initTable == true)) {
                if ((this.tablePHONG != null)) {
                    this.tablePHONG.InitVars();
                }
            }
            this.tableLOAI_PHONG = ((LOAI_PHONGDataTable)(base.Tables["LOAI_PHONG"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_PHONG != null)) {
                    this.tableLOAI_PHONG.InitVars();
                }
            }
            this.relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA = this.Relations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA"];
            this.relationFK_KHACH_TR_TRO_KHACH_HA = this.Relations["FK_KHACH_TR_TRO_KHACH_HA"];
            this.relationFK_KHACH_TR_TRO_PHIEU_TH = this.Relations["FK_KHACH_TR_TRO_PHIEU_TH"];
            this.relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA1 = this.Relations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA1"];
            this.relationFK_PHONG_PHONG_THU_LOAI_PHO = this.Relations["FK_PHONG_PHONG_THU_LOAI_PHO"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "QLKSDataSet_TSKHFilterRoom";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/QLKSDataSet_TSKHFilterRoom.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableQUOC_GIA = new QUOC_GIADataTable();
            base.Tables.Add(this.tableQUOC_GIA);
            this.tableKHACH_HANG = new KHACH_HANGDataTable();
            base.Tables.Add(this.tableKHACH_HANG);
            this.tablePHIEU_THUE_PHONG = new PHIEU_THUE_PHONGDataTable();
            base.Tables.Add(this.tablePHIEU_THUE_PHONG);
            this.tableKHACH_TRO = new KHACH_TRODataTable();
            base.Tables.Add(this.tableKHACH_TRO);
            this.tablePHONG = new PHONGDataTable();
            base.Tables.Add(this.tablePHONG);
            this.tableLOAI_PHONG = new LOAI_PHONGDataTable();
            base.Tables.Add(this.tableLOAI_PHONG);
            this.relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA = new global::System.Data.DataRelation("FK_PHIEU_TH_PHIEU_THU_KHACH_HA", new global::System.Data.DataColumn[] {
                        this.tableKHACH_HANG.MA_KHACH_HANGColumn}, new global::System.Data.DataColumn[] {
                        this.tablePHIEU_THUE_PHONG.MA_KHACH_HANGColumn}, false);
            this.Relations.Add(this.relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA);
            this.relationFK_KHACH_TR_TRO_KHACH_HA = new global::System.Data.DataRelation("FK_KHACH_TR_TRO_KHACH_HA", new global::System.Data.DataColumn[] {
                        this.tableKHACH_HANG.MA_KHACH_HANGColumn}, new global::System.Data.DataColumn[] {
                        this.tableKHACH_TRO.MA_KHACH_HANGColumn}, false);
            this.Relations.Add(this.relationFK_KHACH_TR_TRO_KHACH_HA);
            this.relationFK_KHACH_TR_TRO_PHIEU_TH = new global::System.Data.DataRelation("FK_KHACH_TR_TRO_PHIEU_TH", new global::System.Data.DataColumn[] {
                        this.tablePHIEU_THUE_PHONG.MA_PHIEUColumn}, new global::System.Data.DataColumn[] {
                        this.tableKHACH_TRO.MA_PHIEUColumn}, false);
            this.Relations.Add(this.relationFK_KHACH_TR_TRO_PHIEU_TH);
            this.relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA1 = new global::System.Data.DataRelation("FK_PHIEU_TH_PHIEU_THU_KHACH_HA1", new global::System.Data.DataColumn[] {
                        this.tableKHACH_TRO.MA_KHACH_HANGColumn}, new global::System.Data.DataColumn[] {
                        this.tablePHIEU_THUE_PHONG.MA_KHACH_HANGColumn}, false);
            this.Relations.Add(this.relationFK_PHIEU_TH_PHIEU_THU_KHACH_HA1);
            this.relationFK_PHONG_PHONG_THU_LOAI_PHO = new global::System.Data.DataRelation("FK_PHONG_PHONG_THU_LOAI_PHO", new global::System.Data.DataColumn[] {
                        this.tableLOAI_PHONG.MA_LOAI_PHONGColumn}, new global::System.Data.DataColumn[] {
                        this.tablePHONG.MA_LOAI_PHONGColumn}, false);
            this.Relations.Add(this.relationFK_PHONG_PHONG_THU_LOAI_PHO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQUOC_GIA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKHACH_HANG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHIEU_THUE_PHONG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKHACH_TRO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHONG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_PHONG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void QUOC_GIARowChangeEventHandler(object sender, QUOC_GIARowChangeEvent e);
        
        public delegate void KHACH_HANGRowChangeEventHandler(object sender, KHACH_HANGRowChangeEvent e);
        
        public delegate void PHIEU_THUE_PHONGRowChangeEventHandler(object sender, PHIEU_THUE_PHONGRowChangeEvent e);
        
        public delegate void KHACH_TRORowChangeEventHandler(object sender, KHACH_TRORowChangeEvent e);
        
        public delegate void PHONGRowChangeEventHandler(object sender, PHONGRowChangeEvent e);
        
        public delegate void LOAI_PHONGRowChangeEventHandler(object sender, LOAI_PHONGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUOC_GIADataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMA_QUOC_GIA;
            
            private global::System.Data.DataColumn columnTEN_QUOC_GIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIADataTable() {
                this.TableName = "QUOC_GIA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUOC_GIADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QUOC_GIADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_QUOC_GIAColumn {
                get {
                    return this.columnMA_QUOC_GIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEN_QUOC_GIAColumn {
                get {
                    return this.columnTEN_QUOC_GIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIARow this[int index] {
                get {
                    return ((QUOC_GIARow)(this.Rows[index]));
                }
            }
            
            public event QUOC_GIARowChangeEventHandler QUOC_GIARowChanging;
            
            public event QUOC_GIARowChangeEventHandler QUOC_GIARowChanged;
            
            public event QUOC_GIARowChangeEventHandler QUOC_GIARowDeleting;
            
            public event QUOC_GIARowChangeEventHandler QUOC_GIARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQUOC_GIARow(QUOC_GIARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIARow AddQUOC_GIARow(string TEN_QUOC_GIA) {
                QUOC_GIARow rowQUOC_GIARow = ((QUOC_GIARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TEN_QUOC_GIA};
                rowQUOC_GIARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQUOC_GIARow);
                return rowQUOC_GIARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIARow FindByMA_QUOC_GIA(int MA_QUOC_GIA) {
                return ((QUOC_GIARow)(this.Rows.Find(new object[] {
                            MA_QUOC_GIA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                QUOC_GIADataTable cln = ((QUOC_GIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QUOC_GIADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_QUOC_GIA = base.Columns["MA_QUOC_GIA"];
                this.columnTEN_QUOC_GIA = base.Columns["TEN_QUOC_GIA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_QUOC_GIA = new global::System.Data.DataColumn("MA_QUOC_GIA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_QUOC_GIA);
                this.columnTEN_QUOC_GIA = new global::System.Data.DataColumn("TEN_QUOC_GIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN_QUOC_GIA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA_QUOC_GIA}, true));
                this.columnMA_QUOC_GIA.AutoIncrement = true;
                this.columnMA_QUOC_GIA.AllowDBNull = false;
                this.columnMA_QUOC_GIA.ReadOnly = true;
                this.columnMA_QUOC_GIA.Unique = true;
                this.columnTEN_QUOC_GIA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIARow NewQUOC_GIARow() {
                return ((QUOC_GIARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QUOC_GIARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(QUOC_GIARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUOC_GIARowChanged != null)) {
                    this.QUOC_GIARowChanged(this, new QUOC_GIARowChangeEvent(((QUOC_GIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUOC_GIARowChanging != null)) {
                    this.QUOC_GIARowChanging(this, new QUOC_GIARowChangeEvent(((QUOC_GIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUOC_GIARowDeleted != null)) {
                    this.QUOC_GIARowDeleted(this, new QUOC_GIARowChangeEvent(((QUOC_GIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUOC_GIARowDeleting != null)) {
                    this.QUOC_GIARowDeleting(this, new QUOC_GIARowChangeEvent(((QUOC_GIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQUOC_GIARow(QUOC_GIARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUOC_GIADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHACH_HANGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMA_KHACH_HANG;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnHO_CHIEU;
            
            private global::System.Data.DataColumn columnDIEN_THOAI;
            
            private global::System.Data.DataColumn columnHIEU_LUC;
            
            private global::System.Data.DataColumn columnTEN_QUOC_GIA;
            
            private global::System.Data.DataColumn columnHO_TEN_KHACH_HANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGDataTable() {
                this.TableName = "KHACH_HANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHACH_HANGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_KHACH_HANGColumn {
                get {
                    return this.columnMA_KHACH_HANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HO_CHIEUColumn {
                get {
                    return this.columnHO_CHIEU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIEN_THOAIColumn {
                get {
                    return this.columnDIEN_THOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIEU_LUCColumn {
                get {
                    return this.columnHIEU_LUC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEN_QUOC_GIAColumn {
                get {
                    return this.columnTEN_QUOC_GIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HO_TEN_KHACH_HANGColumn {
                get {
                    return this.columnHO_TEN_KHACH_HANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow this[int index] {
                get {
                    return ((KHACH_HANGRow)(this.Rows[index]));
                }
            }
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanging;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanged;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleting;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow AddKHACH_HANGRow(string CMND, string HO_CHIEU, string DIEN_THOAI, bool HIEU_LUC, string TEN_QUOC_GIA, string HO_TEN_KHACH_HANG) {
                KHACH_HANGRow rowKHACH_HANGRow = ((KHACH_HANGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CMND,
                        HO_CHIEU,
                        DIEN_THOAI,
                        HIEU_LUC,
                        TEN_QUOC_GIA,
                        HO_TEN_KHACH_HANG};
                rowKHACH_HANGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKHACH_HANGRow);
                return rowKHACH_HANGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow FindByMA_KHACH_HANG(int MA_KHACH_HANG) {
                return ((KHACH_HANGRow)(this.Rows.Find(new object[] {
                            MA_KHACH_HANG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KHACH_HANGDataTable cln = ((KHACH_HANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KHACH_HANGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_KHACH_HANG = base.Columns["MA_KHACH_HANG"];
                this.columnCMND = base.Columns["CMND"];
                this.columnHO_CHIEU = base.Columns["HO_CHIEU"];
                this.columnDIEN_THOAI = base.Columns["DIEN_THOAI"];
                this.columnHIEU_LUC = base.Columns["HIEU_LUC"];
                this.columnTEN_QUOC_GIA = base.Columns["TEN_QUOC_GIA"];
                this.columnHO_TEN_KHACH_HANG = base.Columns["HO_TEN_KHACH_HANG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_KHACH_HANG = new global::System.Data.DataColumn("MA_KHACH_HANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_KHACH_HANG);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnHO_CHIEU = new global::System.Data.DataColumn("HO_CHIEU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO_CHIEU);
                this.columnDIEN_THOAI = new global::System.Data.DataColumn("DIEN_THOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIEN_THOAI);
                this.columnHIEU_LUC = new global::System.Data.DataColumn("HIEU_LUC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIEU_LUC);
                this.columnTEN_QUOC_GIA = new global::System.Data.DataColumn("TEN_QUOC_GIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN_QUOC_GIA);
                this.columnHO_TEN_KHACH_HANG = new global::System.Data.DataColumn("HO_TEN_KHACH_HANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO_TEN_KHACH_HANG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA_KHACH_HANG}, true));
                this.columnMA_KHACH_HANG.AutoIncrement = true;
                this.columnMA_KHACH_HANG.AllowDBNull = false;
                this.columnMA_KHACH_HANG.ReadOnly = true;
                this.columnMA_KHACH_HANG.Unique = true;
                this.columnCMND.MaxLength = 20;
                this.columnHO_CHIEU.MaxLength = 20;
                this.columnDIEN_THOAI.MaxLength = 20;
                this.columnHIEU_LUC.AllowDBNull = false;
                this.columnTEN_QUOC_GIA.MaxLength = 50;
                this.columnHO_TEN_KHACH_HANG.ReadOnly = true;
                this.columnHO_TEN_KHACH_HANG.MaxLength = 101;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow NewKHACH_HANGRow() {
                return ((KHACH_HANGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KHACH_HANGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KHACH_HANGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHACH_HANGRowChanged != null)) {
                    this.KHACH_HANGRowChanged(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHACH_HANGRowChanging != null)) {
                    this.KHACH_HANGRowChanging(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHACH_HANGRowDeleted != null)) {
                    this.KHACH_HANGRowDeleted(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHACH_HANGRowDeleting != null)) {
                    this.KHACH_HANGRowDeleting(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHACH_HANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHIEU_THUE_PHONGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMA_PHIEU;
            
            private global::System.Data.DataColumn columnMA_KHACH_HANG;
            
            private global::System.Data.DataColumn columnMA_DOAN_KHACH;
            
            private global::System.Data.DataColumn columnNGAY_NHAN_PHONG;
            
            private global::System.Data.DataColumn columnNGAY_TRA_PHONG;
            
            private global::System.Data.DataColumn columnDON_GIA_PHONG;
            
            private global::System.Data.DataColumn columnGHI_CHU;
            
            private global::System.Data.DataColumn columnTHANH_TOAN_TIEN_PHONG;
            
            private global::System.Data.DataColumn columnTHANH_TOAN_DICH_VU;
            
            private global::System.Data.DataColumn columnDA_TRA_PHONG;
            
            private global::System.Data.DataColumn columnSO_PHONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGDataTable() {
                this.TableName = "PHIEU_THUE_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHIEU_THUE_PHONGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHIEU_THUE_PHONGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_PHIEUColumn {
                get {
                    return this.columnMA_PHIEU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_KHACH_HANGColumn {
                get {
                    return this.columnMA_KHACH_HANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_DOAN_KHACHColumn {
                get {
                    return this.columnMA_DOAN_KHACH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAY_NHAN_PHONGColumn {
                get {
                    return this.columnNGAY_NHAN_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NGAY_TRA_PHONGColumn {
                get {
                    return this.columnNGAY_TRA_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DON_GIA_PHONGColumn {
                get {
                    return this.columnDON_GIA_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GHI_CHUColumn {
                get {
                    return this.columnGHI_CHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THANH_TOAN_TIEN_PHONGColumn {
                get {
                    return this.columnTHANH_TOAN_TIEN_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn THANH_TOAN_DICH_VUColumn {
                get {
                    return this.columnTHANH_TOAN_DICH_VU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DA_TRA_PHONGColumn {
                get {
                    return this.columnDA_TRA_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_PHONGColumn {
                get {
                    return this.columnSO_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow this[int index] {
                get {
                    return ((PHIEU_THUE_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowChanging;
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowChanged;
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowDeleting;
            
            public event PHIEU_THUE_PHONGRowChangeEventHandler PHIEU_THUE_PHONGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHIEU_THUE_PHONGRow(PHIEU_THUE_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow AddPHIEU_THUE_PHONGRow(KHACH_HANGRow parentKHACH_HANGRowByFK_PHIEU_TH_PHIEU_THU_KHACH_HA, int MA_DOAN_KHACH, System.DateTime NGAY_NHAN_PHONG, System.DateTime NGAY_TRA_PHONG, decimal DON_GIA_PHONG, string GHI_CHU, bool THANH_TOAN_TIEN_PHONG, bool THANH_TOAN_DICH_VU, bool DA_TRA_PHONG, string SO_PHONG) {
                PHIEU_THUE_PHONGRow rowPHIEU_THUE_PHONGRow = ((PHIEU_THUE_PHONGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        MA_DOAN_KHACH,
                        NGAY_NHAN_PHONG,
                        NGAY_TRA_PHONG,
                        DON_GIA_PHONG,
                        GHI_CHU,
                        THANH_TOAN_TIEN_PHONG,
                        THANH_TOAN_DICH_VU,
                        DA_TRA_PHONG,
                        SO_PHONG};
                if ((parentKHACH_HANGRowByFK_PHIEU_TH_PHIEU_THU_KHACH_HA != null)) {
                    columnValuesArray[1] = parentKHACH_HANGRowByFK_PHIEU_TH_PHIEU_THU_KHACH_HA[0];
                }
                rowPHIEU_THUE_PHONGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPHIEU_THUE_PHONGRow);
                return rowPHIEU_THUE_PHONGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow FindByMA_PHIEU(int MA_PHIEU) {
                return ((PHIEU_THUE_PHONGRow)(this.Rows.Find(new object[] {
                            MA_PHIEU})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PHIEU_THUE_PHONGDataTable cln = ((PHIEU_THUE_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PHIEU_THUE_PHONGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_PHIEU = base.Columns["MA_PHIEU"];
                this.columnMA_KHACH_HANG = base.Columns["MA_KHACH_HANG"];
                this.columnMA_DOAN_KHACH = base.Columns["MA_DOAN_KHACH"];
                this.columnNGAY_NHAN_PHONG = base.Columns["NGAY_NHAN_PHONG"];
                this.columnNGAY_TRA_PHONG = base.Columns["NGAY_TRA_PHONG"];
                this.columnDON_GIA_PHONG = base.Columns["DON_GIA_PHONG"];
                this.columnGHI_CHU = base.Columns["GHI_CHU"];
                this.columnTHANH_TOAN_TIEN_PHONG = base.Columns["THANH_TOAN_TIEN_PHONG"];
                this.columnTHANH_TOAN_DICH_VU = base.Columns["THANH_TOAN_DICH_VU"];
                this.columnDA_TRA_PHONG = base.Columns["DA_TRA_PHONG"];
                this.columnSO_PHONG = base.Columns["SO_PHONG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_PHIEU = new global::System.Data.DataColumn("MA_PHIEU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_PHIEU);
                this.columnMA_KHACH_HANG = new global::System.Data.DataColumn("MA_KHACH_HANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_KHACH_HANG);
                this.columnMA_DOAN_KHACH = new global::System.Data.DataColumn("MA_DOAN_KHACH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_DOAN_KHACH);
                this.columnNGAY_NHAN_PHONG = new global::System.Data.DataColumn("NGAY_NHAN_PHONG", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAY_NHAN_PHONG);
                this.columnNGAY_TRA_PHONG = new global::System.Data.DataColumn("NGAY_TRA_PHONG", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAY_TRA_PHONG);
                this.columnDON_GIA_PHONG = new global::System.Data.DataColumn("DON_GIA_PHONG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDON_GIA_PHONG);
                this.columnGHI_CHU = new global::System.Data.DataColumn("GHI_CHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGHI_CHU);
                this.columnTHANH_TOAN_TIEN_PHONG = new global::System.Data.DataColumn("THANH_TOAN_TIEN_PHONG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANH_TOAN_TIEN_PHONG);
                this.columnTHANH_TOAN_DICH_VU = new global::System.Data.DataColumn("THANH_TOAN_DICH_VU", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANH_TOAN_DICH_VU);
                this.columnDA_TRA_PHONG = new global::System.Data.DataColumn("DA_TRA_PHONG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDA_TRA_PHONG);
                this.columnSO_PHONG = new global::System.Data.DataColumn("SO_PHONG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_PHONG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA_PHIEU}, true));
                this.columnMA_PHIEU.AutoIncrement = true;
                this.columnMA_PHIEU.AllowDBNull = false;
                this.columnMA_PHIEU.ReadOnly = true;
                this.columnMA_PHIEU.Unique = true;
                this.columnGHI_CHU.MaxLength = 50;
                this.columnSO_PHONG.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow NewPHIEU_THUE_PHONGRow() {
                return ((PHIEU_THUE_PHONGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PHIEU_THUE_PHONGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PHIEU_THUE_PHONGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHIEU_THUE_PHONGRowChanged != null)) {
                    this.PHIEU_THUE_PHONGRowChanged(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHIEU_THUE_PHONGRowChanging != null)) {
                    this.PHIEU_THUE_PHONGRowChanging(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHIEU_THUE_PHONGRowDeleted != null)) {
                    this.PHIEU_THUE_PHONGRowDeleted(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHIEU_THUE_PHONGRowDeleting != null)) {
                    this.PHIEU_THUE_PHONGRowDeleting(this, new PHIEU_THUE_PHONGRowChangeEvent(((PHIEU_THUE_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHIEU_THUE_PHONGRow(PHIEU_THUE_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHIEU_THUE_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHACH_TRODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMA_KHACH_HANG;
            
            private global::System.Data.DataColumn columnMA_PHIEU;
            
            private global::System.Data.DataColumn columnHO_KHACH_HANG;
            
            private global::System.Data.DataColumn columnTEN_KHACH_HANG;
            
            private global::System.Data.DataColumn columnCMND;
            
            private global::System.Data.DataColumn columnHO_CHIEU;
            
            private global::System.Data.DataColumn columnDIEN_THOAI;
            
            private global::System.Data.DataColumn columnTEN_QUOC_GIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRODataTable() {
                this.TableName = "KHACH_TRO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_TRODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHACH_TRODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_KHACH_HANGColumn {
                get {
                    return this.columnMA_KHACH_HANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_PHIEUColumn {
                get {
                    return this.columnMA_PHIEU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HO_KHACH_HANGColumn {
                get {
                    return this.columnHO_KHACH_HANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEN_KHACH_HANGColumn {
                get {
                    return this.columnTEN_KHACH_HANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HO_CHIEUColumn {
                get {
                    return this.columnHO_CHIEU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIEN_THOAIColumn {
                get {
                    return this.columnDIEN_THOAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEN_QUOC_GIAColumn {
                get {
                    return this.columnTEN_QUOC_GIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow this[int index] {
                get {
                    return ((KHACH_TRORow)(this.Rows[index]));
                }
            }
            
            public event KHACH_TRORowChangeEventHandler KHACH_TRORowChanging;
            
            public event KHACH_TRORowChangeEventHandler KHACH_TRORowChanged;
            
            public event KHACH_TRORowChangeEventHandler KHACH_TRORowDeleting;
            
            public event KHACH_TRORowChangeEventHandler KHACH_TRORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHACH_TRORow(KHACH_TRORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow AddKHACH_TRORow(KHACH_HANGRow parentKHACH_HANGRowByFK_KHACH_TR_TRO_KHACH_HA, PHIEU_THUE_PHONGRow parentPHIEU_THUE_PHONGRowByFK_KHACH_TR_TRO_PHIEU_TH, string HO_KHACH_HANG, string TEN_KHACH_HANG, string CMND, string HO_CHIEU, string DIEN_THOAI, string TEN_QUOC_GIA) {
                KHACH_TRORow rowKHACH_TRORow = ((KHACH_TRORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        HO_KHACH_HANG,
                        TEN_KHACH_HANG,
                        CMND,
                        HO_CHIEU,
                        DIEN_THOAI,
                        TEN_QUOC_GIA};
                if ((parentKHACH_HANGRowByFK_KHACH_TR_TRO_KHACH_HA != null)) {
                    columnValuesArray[0] = parentKHACH_HANGRowByFK_KHACH_TR_TRO_KHACH_HA[0];
                }
                if ((parentPHIEU_THUE_PHONGRowByFK_KHACH_TR_TRO_PHIEU_TH != null)) {
                    columnValuesArray[1] = parentPHIEU_THUE_PHONGRowByFK_KHACH_TR_TRO_PHIEU_TH[0];
                }
                rowKHACH_TRORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKHACH_TRORow);
                return rowKHACH_TRORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow FindByMA_KHACH_HANGMA_PHIEU(int MA_KHACH_HANG, int MA_PHIEU) {
                return ((KHACH_TRORow)(this.Rows.Find(new object[] {
                            MA_KHACH_HANG,
                            MA_PHIEU})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KHACH_TRODataTable cln = ((KHACH_TRODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KHACH_TRODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_KHACH_HANG = base.Columns["MA_KHACH_HANG"];
                this.columnMA_PHIEU = base.Columns["MA_PHIEU"];
                this.columnHO_KHACH_HANG = base.Columns["HO_KHACH_HANG"];
                this.columnTEN_KHACH_HANG = base.Columns["TEN_KHACH_HANG"];
                this.columnCMND = base.Columns["CMND"];
                this.columnHO_CHIEU = base.Columns["HO_CHIEU"];
                this.columnDIEN_THOAI = base.Columns["DIEN_THOAI"];
                this.columnTEN_QUOC_GIA = base.Columns["TEN_QUOC_GIA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_KHACH_HANG = new global::System.Data.DataColumn("MA_KHACH_HANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_KHACH_HANG);
                this.columnMA_PHIEU = new global::System.Data.DataColumn("MA_PHIEU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_PHIEU);
                this.columnHO_KHACH_HANG = new global::System.Data.DataColumn("HO_KHACH_HANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO_KHACH_HANG);
                this.columnTEN_KHACH_HANG = new global::System.Data.DataColumn("TEN_KHACH_HANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN_KHACH_HANG);
                this.columnCMND = new global::System.Data.DataColumn("CMND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnHO_CHIEU = new global::System.Data.DataColumn("HO_CHIEU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHO_CHIEU);
                this.columnDIEN_THOAI = new global::System.Data.DataColumn("DIEN_THOAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIEN_THOAI);
                this.columnTEN_QUOC_GIA = new global::System.Data.DataColumn("TEN_QUOC_GIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN_QUOC_GIA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA_KHACH_HANG,
                                this.columnMA_PHIEU}, true));
                this.columnMA_KHACH_HANG.AllowDBNull = false;
                this.columnMA_PHIEU.AllowDBNull = false;
                this.columnHO_KHACH_HANG.MaxLength = 50;
                this.columnTEN_KHACH_HANG.MaxLength = 50;
                this.columnCMND.MaxLength = 20;
                this.columnHO_CHIEU.MaxLength = 20;
                this.columnDIEN_THOAI.MaxLength = 20;
                this.columnTEN_QUOC_GIA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow NewKHACH_TRORow() {
                return ((KHACH_TRORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KHACH_TRORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KHACH_TRORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHACH_TRORowChanged != null)) {
                    this.KHACH_TRORowChanged(this, new KHACH_TRORowChangeEvent(((KHACH_TRORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHACH_TRORowChanging != null)) {
                    this.KHACH_TRORowChanging(this, new KHACH_TRORowChangeEvent(((KHACH_TRORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHACH_TRORowDeleted != null)) {
                    this.KHACH_TRORowDeleted(this, new KHACH_TRORowChangeEvent(((KHACH_TRORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHACH_TRORowDeleting != null)) {
                    this.KHACH_TRORowDeleting(this, new KHACH_TRORowChangeEvent(((KHACH_TRORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHACH_TRORow(KHACH_TRORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHACH_TRODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHONGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMA_PHONG;
            
            private global::System.Data.DataColumn columnMA_LOAI_PHONG;
            
            private global::System.Data.DataColumn columnMA_TINH_TRANG;
            
            private global::System.Data.DataColumn columnSO_PHONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGDataTable() {
                this.TableName = "PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHONGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHONGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_PHONGColumn {
                get {
                    return this.columnMA_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_LOAI_PHONGColumn {
                get {
                    return this.columnMA_LOAI_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_TINH_TRANGColumn {
                get {
                    return this.columnMA_TINH_TRANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_PHONGColumn {
                get {
                    return this.columnSO_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow this[int index] {
                get {
                    return ((PHONGRow)(this.Rows[index]));
                }
            }
            
            public event PHONGRowChangeEventHandler PHONGRowChanging;
            
            public event PHONGRowChangeEventHandler PHONGRowChanged;
            
            public event PHONGRowChangeEventHandler PHONGRowDeleting;
            
            public event PHONGRowChangeEventHandler PHONGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHONGRow(PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow AddPHONGRow(LOAI_PHONGRow parentLOAI_PHONGRowByFK_PHONG_PHONG_THU_LOAI_PHO, int MA_TINH_TRANG, string SO_PHONG) {
                PHONGRow rowPHONGRow = ((PHONGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        MA_TINH_TRANG,
                        SO_PHONG};
                if ((parentLOAI_PHONGRowByFK_PHONG_PHONG_THU_LOAI_PHO != null)) {
                    columnValuesArray[1] = parentLOAI_PHONGRowByFK_PHONG_PHONG_THU_LOAI_PHO[0];
                }
                rowPHONGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPHONGRow);
                return rowPHONGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow FindByMA_PHONG(int MA_PHONG) {
                return ((PHONGRow)(this.Rows.Find(new object[] {
                            MA_PHONG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PHONGDataTable cln = ((PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PHONGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_PHONG = base.Columns["MA_PHONG"];
                this.columnMA_LOAI_PHONG = base.Columns["MA_LOAI_PHONG"];
                this.columnMA_TINH_TRANG = base.Columns["MA_TINH_TRANG"];
                this.columnSO_PHONG = base.Columns["SO_PHONG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_PHONG = new global::System.Data.DataColumn("MA_PHONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_PHONG);
                this.columnMA_LOAI_PHONG = new global::System.Data.DataColumn("MA_LOAI_PHONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_LOAI_PHONG);
                this.columnMA_TINH_TRANG = new global::System.Data.DataColumn("MA_TINH_TRANG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_TINH_TRANG);
                this.columnSO_PHONG = new global::System.Data.DataColumn("SO_PHONG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_PHONG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA_PHONG}, true));
                this.columnMA_PHONG.AutoIncrement = true;
                this.columnMA_PHONG.AllowDBNull = false;
                this.columnMA_PHONG.ReadOnly = true;
                this.columnMA_PHONG.Unique = true;
                this.columnSO_PHONG.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow NewPHONGRow() {
                return ((PHONGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PHONGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PHONGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHONGRowChanged != null)) {
                    this.PHONGRowChanged(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHONGRowChanging != null)) {
                    this.PHONGRowChanging(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHONGRowDeleted != null)) {
                    this.PHONGRowDeleted(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHONGRowDeleting != null)) {
                    this.PHONGRowDeleting(this, new PHONGRowChangeEvent(((PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHONGRow(PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_PHONGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMA_LOAI_PHONG;
            
            private global::System.Data.DataColumn columnTEN_LOAI_PHONG;
            
            private global::System.Data.DataColumn columnSO_GIUONG;
            
            private global::System.Data.DataColumn columnSO_LUONG_PHONG;
            
            private global::System.Data.DataColumn columnGIA_THAM_KHAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGDataTable() {
                this.TableName = "LOAI_PHONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_PHONGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_PHONGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MA_LOAI_PHONGColumn {
                get {
                    return this.columnMA_LOAI_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEN_LOAI_PHONGColumn {
                get {
                    return this.columnTEN_LOAI_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_GIUONGColumn {
                get {
                    return this.columnSO_GIUONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SO_LUONG_PHONGColumn {
                get {
                    return this.columnSO_LUONG_PHONG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GIA_THAM_KHAOColumn {
                get {
                    return this.columnGIA_THAM_KHAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow this[int index] {
                get {
                    return ((LOAI_PHONGRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowChanging;
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowChanged;
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowDeleting;
            
            public event LOAI_PHONGRowChangeEventHandler LOAI_PHONGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_PHONGRow(LOAI_PHONGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow AddLOAI_PHONGRow(string TEN_LOAI_PHONG, int SO_GIUONG, int SO_LUONG_PHONG, decimal GIA_THAM_KHAO) {
                LOAI_PHONGRow rowLOAI_PHONGRow = ((LOAI_PHONGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TEN_LOAI_PHONG,
                        SO_GIUONG,
                        SO_LUONG_PHONG,
                        GIA_THAM_KHAO};
                rowLOAI_PHONGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOAI_PHONGRow);
                return rowLOAI_PHONGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow FindByMA_LOAI_PHONG(int MA_LOAI_PHONG) {
                return ((LOAI_PHONGRow)(this.Rows.Find(new object[] {
                            MA_LOAI_PHONG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LOAI_PHONGDataTable cln = ((LOAI_PHONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOAI_PHONGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_LOAI_PHONG = base.Columns["MA_LOAI_PHONG"];
                this.columnTEN_LOAI_PHONG = base.Columns["TEN_LOAI_PHONG"];
                this.columnSO_GIUONG = base.Columns["SO_GIUONG"];
                this.columnSO_LUONG_PHONG = base.Columns["SO_LUONG_PHONG"];
                this.columnGIA_THAM_KHAO = base.Columns["GIA_THAM_KHAO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_LOAI_PHONG = new global::System.Data.DataColumn("MA_LOAI_PHONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_LOAI_PHONG);
                this.columnTEN_LOAI_PHONG = new global::System.Data.DataColumn("TEN_LOAI_PHONG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEN_LOAI_PHONG);
                this.columnSO_GIUONG = new global::System.Data.DataColumn("SO_GIUONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_GIUONG);
                this.columnSO_LUONG_PHONG = new global::System.Data.DataColumn("SO_LUONG_PHONG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSO_LUONG_PHONG);
                this.columnGIA_THAM_KHAO = new global::System.Data.DataColumn("GIA_THAM_KHAO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGIA_THAM_KHAO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMA_LOAI_PHONG}, true));
                this.columnMA_LOAI_PHONG.AutoIncrement = true;
                this.columnMA_LOAI_PHONG.AllowDBNull = false;
                this.columnMA_LOAI_PHONG.ReadOnly = true;
                this.columnMA_LOAI_PHONG.Unique = true;
                this.columnTEN_LOAI_PHONG.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow NewLOAI_PHONGRow() {
                return ((LOAI_PHONGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOAI_PHONGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LOAI_PHONGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_PHONGRowChanged != null)) {
                    this.LOAI_PHONGRowChanged(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_PHONGRowChanging != null)) {
                    this.LOAI_PHONGRowChanging(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_PHONGRowDeleted != null)) {
                    this.LOAI_PHONGRowDeleted(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_PHONGRowDeleting != null)) {
                    this.LOAI_PHONGRowDeleting(this, new LOAI_PHONGRowChangeEvent(((LOAI_PHONGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_PHONGRow(LOAI_PHONGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QLKSDataSet_TSKHFilterRoom ds = new QLKSDataSet_TSKHFilterRoom();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_PHONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QUOC_GIARow : global::System.Data.DataRow {
            
            private QUOC_GIADataTable tableQUOC_GIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUOC_GIARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUOC_GIA = ((QUOC_GIADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_QUOC_GIA {
                get {
                    return ((int)(this[this.tableQUOC_GIA.MA_QUOC_GIAColumn]));
                }
                set {
                    this[this.tableQUOC_GIA.MA_QUOC_GIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN_QUOC_GIA {
                get {
                    try {
                        return ((string)(this[this.tableQUOC_GIA.TEN_QUOC_GIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN_QUOC_GIA\' in table \'QUOC_GIA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOC_GIA.TEN_QUOC_GIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEN_QUOC_GIANull() {
                return this.IsNull(this.tableQUOC_GIA.TEN_QUOC_GIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEN_QUOC_GIANull() {
                this[this.tableQUOC_GIA.TEN_QUOC_GIAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHACH_HANGRow : global::System.Data.DataRow {
            
            private KHACH_HANGDataTable tableKHACH_HANG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHACH_HANG = ((KHACH_HANGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_KHACH_HANG {
                get {
                    return ((int)(this[this.tableKHACH_HANG.MA_KHACH_HANGColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.MA_KHACH_HANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO_CHIEU {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.HO_CHIEUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO_CHIEU\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.HO_CHIEUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIEN_THOAI {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.DIEN_THOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIEN_THOAI\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.DIEN_THOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HIEU_LUC {
                get {
                    return ((bool)(this[this.tableKHACH_HANG.HIEU_LUCColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.HIEU_LUCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN_QUOC_GIA {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.TEN_QUOC_GIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN_QUOC_GIA\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.TEN_QUOC_GIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO_TEN_KHACH_HANG {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.HO_TEN_KHACH_HANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO_TEN_KHACH_HANG\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.HO_TEN_KHACH_HANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableKHACH_HANG.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableKHACH_HANG.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHO_CHIEUNull() {
                return this.IsNull(this.tableKHACH_HANG.HO_CHIEUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHO_CHIEUNull() {
                this[this.tableKHACH_HANG.HO_CHIEUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIEN_THOAINull() {
                return this.IsNull(this.tableKHACH_HANG.DIEN_THOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIEN_THOAINull() {
                this[this.tableKHACH_HANG.DIEN_THOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEN_QUOC_GIANull() {
                return this.IsNull(this.tableKHACH_HANG.TEN_QUOC_GIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEN_QUOC_GIANull() {
                this[this.tableKHACH_HANG.TEN_QUOC_GIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHO_TEN_KHACH_HANGNull() {
                return this.IsNull(this.tableKHACH_HANG.HO_TEN_KHACH_HANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHO_TEN_KHACH_HANGNull() {
                this[this.tableKHACH_HANG.HO_TEN_KHACH_HANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow[] GetPHIEU_THUE_PHONGRows() {
                if ((this.Table.ChildRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA"] == null)) {
                    return new PHIEU_THUE_PHONGRow[0];
                }
                else {
                    return ((PHIEU_THUE_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow[] GetKHACH_TRORows() {
                if ((this.Table.ChildRelations["FK_KHACH_TR_TRO_KHACH_HA"] == null)) {
                    return new KHACH_TRORow[0];
                }
                else {
                    return ((KHACH_TRORow[])(base.GetChildRows(this.Table.ChildRelations["FK_KHACH_TR_TRO_KHACH_HA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHIEU_THUE_PHONGRow : global::System.Data.DataRow {
            
            private PHIEU_THUE_PHONGDataTable tablePHIEU_THUE_PHONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHIEU_THUE_PHONGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHIEU_THUE_PHONG = ((PHIEU_THUE_PHONGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_PHIEU {
                get {
                    return ((int)(this[this.tablePHIEU_THUE_PHONG.MA_PHIEUColumn]));
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.MA_PHIEUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_KHACH_HANG {
                get {
                    try {
                        return ((int)(this[this.tablePHIEU_THUE_PHONG.MA_KHACH_HANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MA_KHACH_HANG\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.MA_KHACH_HANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_DOAN_KHACH {
                get {
                    try {
                        return ((int)(this[this.tablePHIEU_THUE_PHONG.MA_DOAN_KHACHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MA_DOAN_KHACH\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.MA_DOAN_KHACHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAY_NHAN_PHONG {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePHIEU_THUE_PHONG.NGAY_NHAN_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAY_NHAN_PHONG\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.NGAY_NHAN_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NGAY_TRA_PHONG {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePHIEU_THUE_PHONG.NGAY_TRA_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NGAY_TRA_PHONG\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.NGAY_TRA_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DON_GIA_PHONG {
                get {
                    try {
                        return ((decimal)(this[this.tablePHIEU_THUE_PHONG.DON_GIA_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DON_GIA_PHONG\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.DON_GIA_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GHI_CHU {
                get {
                    try {
                        return ((string)(this[this.tablePHIEU_THUE_PHONG.GHI_CHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GHI_CHU\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.GHI_CHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool THANH_TOAN_TIEN_PHONG {
                get {
                    try {
                        return ((bool)(this[this.tablePHIEU_THUE_PHONG.THANH_TOAN_TIEN_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THANH_TOAN_TIEN_PHONG\' in table \'PHIEU_THUE_PHONG\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.THANH_TOAN_TIEN_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool THANH_TOAN_DICH_VU {
                get {
                    try {
                        return ((bool)(this[this.tablePHIEU_THUE_PHONG.THANH_TOAN_DICH_VUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'THANH_TOAN_DICH_VU\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.THANH_TOAN_DICH_VUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DA_TRA_PHONG {
                get {
                    try {
                        return ((bool)(this[this.tablePHIEU_THUE_PHONG.DA_TRA_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DA_TRA_PHONG\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.DA_TRA_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SO_PHONG {
                get {
                    try {
                        return ((string)(this[this.tablePHIEU_THUE_PHONG.SO_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_PHONG\' in table \'PHIEU_THUE_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHIEU_THUE_PHONG.SO_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow KHACH_TRORow {
                get {
                    return ((KHACH_TRORow)(this.GetParentRow(this.Table.ParentRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMA_KHACH_HANGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.MA_KHACH_HANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMA_KHACH_HANGNull() {
                this[this.tablePHIEU_THUE_PHONG.MA_KHACH_HANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMA_DOAN_KHACHNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.MA_DOAN_KHACHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMA_DOAN_KHACHNull() {
                this[this.tablePHIEU_THUE_PHONG.MA_DOAN_KHACHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAY_NHAN_PHONGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.NGAY_NHAN_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAY_NHAN_PHONGNull() {
                this[this.tablePHIEU_THUE_PHONG.NGAY_NHAN_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAY_TRA_PHONGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.NGAY_TRA_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAY_TRA_PHONGNull() {
                this[this.tablePHIEU_THUE_PHONG.NGAY_TRA_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDON_GIA_PHONGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.DON_GIA_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDON_GIA_PHONGNull() {
                this[this.tablePHIEU_THUE_PHONG.DON_GIA_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGHI_CHUNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.GHI_CHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGHI_CHUNull() {
                this[this.tablePHIEU_THUE_PHONG.GHI_CHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHANH_TOAN_TIEN_PHONGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.THANH_TOAN_TIEN_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHANH_TOAN_TIEN_PHONGNull() {
                this[this.tablePHIEU_THUE_PHONG.THANH_TOAN_TIEN_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHANH_TOAN_DICH_VUNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.THANH_TOAN_DICH_VUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHANH_TOAN_DICH_VUNull() {
                this[this.tablePHIEU_THUE_PHONG.THANH_TOAN_DICH_VUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDA_TRA_PHONGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.DA_TRA_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDA_TRA_PHONGNull() {
                this[this.tablePHIEU_THUE_PHONG.DA_TRA_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_PHONGNull() {
                return this.IsNull(this.tablePHIEU_THUE_PHONG.SO_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_PHONGNull() {
                this[this.tablePHIEU_THUE_PHONG.SO_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow[] GetKHACH_TRORows() {
                if ((this.Table.ChildRelations["FK_KHACH_TR_TRO_PHIEU_TH"] == null)) {
                    return new KHACH_TRORow[0];
                }
                else {
                    return ((KHACH_TRORow[])(base.GetChildRows(this.Table.ChildRelations["FK_KHACH_TR_TRO_PHIEU_TH"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHACH_TRORow : global::System.Data.DataRow {
            
            private KHACH_TRODataTable tableKHACH_TRO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_TRORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHACH_TRO = ((KHACH_TRODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_KHACH_HANG {
                get {
                    return ((int)(this[this.tableKHACH_TRO.MA_KHACH_HANGColumn]));
                }
                set {
                    this[this.tableKHACH_TRO.MA_KHACH_HANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_PHIEU {
                get {
                    return ((int)(this[this.tableKHACH_TRO.MA_PHIEUColumn]));
                }
                set {
                    this[this.tableKHACH_TRO.MA_PHIEUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO_KHACH_HANG {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_TRO.HO_KHACH_HANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO_KHACH_HANG\' in table \'KHACH_TRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_TRO.HO_KHACH_HANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN_KHACH_HANG {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_TRO.TEN_KHACH_HANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN_KHACH_HANG\' in table \'KHACH_TRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_TRO.TEN_KHACH_HANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_TRO.CMNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMND\' in table \'KHACH_TRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_TRO.CMNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HO_CHIEU {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_TRO.HO_CHIEUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HO_CHIEU\' in table \'KHACH_TRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_TRO.HO_CHIEUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIEN_THOAI {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_TRO.DIEN_THOAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIEN_THOAI\' in table \'KHACH_TRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_TRO.DIEN_THOAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN_QUOC_GIA {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_TRO.TEN_QUOC_GIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN_QUOC_GIA\' in table \'KHACH_TRO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_TRO.TEN_QUOC_GIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_KHACH_TR_TRO_KHACH_HA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_KHACH_TR_TRO_KHACH_HA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow PHIEU_THUE_PHONGRow {
                get {
                    return ((PHIEU_THUE_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_KHACH_TR_TRO_PHIEU_TH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_KHACH_TR_TRO_PHIEU_TH"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHO_KHACH_HANGNull() {
                return this.IsNull(this.tableKHACH_TRO.HO_KHACH_HANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHO_KHACH_HANGNull() {
                this[this.tableKHACH_TRO.HO_KHACH_HANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEN_KHACH_HANGNull() {
                return this.IsNull(this.tableKHACH_TRO.TEN_KHACH_HANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEN_KHACH_HANGNull() {
                this[this.tableKHACH_TRO.TEN_KHACH_HANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCMNDNull() {
                return this.IsNull(this.tableKHACH_TRO.CMNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCMNDNull() {
                this[this.tableKHACH_TRO.CMNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHO_CHIEUNull() {
                return this.IsNull(this.tableKHACH_TRO.HO_CHIEUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHO_CHIEUNull() {
                this[this.tableKHACH_TRO.HO_CHIEUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIEN_THOAINull() {
                return this.IsNull(this.tableKHACH_TRO.DIEN_THOAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIEN_THOAINull() {
                this[this.tableKHACH_TRO.DIEN_THOAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEN_QUOC_GIANull() {
                return this.IsNull(this.tableKHACH_TRO.TEN_QUOC_GIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEN_QUOC_GIANull() {
                this[this.tableKHACH_TRO.TEN_QUOC_GIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow[] GetPHIEU_THUE_PHONGRows() {
                if ((this.Table.ChildRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA1"] == null)) {
                    return new PHIEU_THUE_PHONGRow[0];
                }
                else {
                    return ((PHIEU_THUE_PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHIEU_TH_PHIEU_THU_KHACH_HA1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHONGRow : global::System.Data.DataRow {
            
            private PHONGDataTable tablePHONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHONGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHONG = ((PHONGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_PHONG {
                get {
                    return ((int)(this[this.tablePHONG.MA_PHONGColumn]));
                }
                set {
                    this[this.tablePHONG.MA_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_LOAI_PHONG {
                get {
                    try {
                        return ((int)(this[this.tablePHONG.MA_LOAI_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MA_LOAI_PHONG\' in table \'PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHONG.MA_LOAI_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_TINH_TRANG {
                get {
                    try {
                        return ((int)(this[this.tablePHONG.MA_TINH_TRANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MA_TINH_TRANG\' in table \'PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHONG.MA_TINH_TRANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SO_PHONG {
                get {
                    try {
                        return ((string)(this[this.tablePHONG.SO_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_PHONG\' in table \'PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHONG.SO_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow LOAI_PHONGRow {
                get {
                    return ((LOAI_PHONGRow)(this.GetParentRow(this.Table.ParentRelations["FK_PHONG_PHONG_THU_LOAI_PHO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PHONG_PHONG_THU_LOAI_PHO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMA_LOAI_PHONGNull() {
                return this.IsNull(this.tablePHONG.MA_LOAI_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMA_LOAI_PHONGNull() {
                this[this.tablePHONG.MA_LOAI_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMA_TINH_TRANGNull() {
                return this.IsNull(this.tablePHONG.MA_TINH_TRANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMA_TINH_TRANGNull() {
                this[this.tablePHONG.MA_TINH_TRANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_PHONGNull() {
                return this.IsNull(this.tablePHONG.SO_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_PHONGNull() {
                this[this.tablePHONG.SO_PHONGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_PHONGRow : global::System.Data.DataRow {
            
            private LOAI_PHONGDataTable tableLOAI_PHONG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_PHONGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_PHONG = ((LOAI_PHONGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MA_LOAI_PHONG {
                get {
                    return ((int)(this[this.tableLOAI_PHONG.MA_LOAI_PHONGColumn]));
                }
                set {
                    this[this.tableLOAI_PHONG.MA_LOAI_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEN_LOAI_PHONG {
                get {
                    try {
                        return ((string)(this[this.tableLOAI_PHONG.TEN_LOAI_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEN_LOAI_PHONG\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.TEN_LOAI_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_GIUONG {
                get {
                    try {
                        return ((int)(this[this.tableLOAI_PHONG.SO_GIUONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_GIUONG\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.SO_GIUONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SO_LUONG_PHONG {
                get {
                    try {
                        return ((int)(this[this.tableLOAI_PHONG.SO_LUONG_PHONGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SO_LUONG_PHONG\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.SO_LUONG_PHONGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GIA_THAM_KHAO {
                get {
                    try {
                        return ((decimal)(this[this.tableLOAI_PHONG.GIA_THAM_KHAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GIA_THAM_KHAO\' in table \'LOAI_PHONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_PHONG.GIA_THAM_KHAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEN_LOAI_PHONGNull() {
                return this.IsNull(this.tableLOAI_PHONG.TEN_LOAI_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEN_LOAI_PHONGNull() {
                this[this.tableLOAI_PHONG.TEN_LOAI_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_GIUONGNull() {
                return this.IsNull(this.tableLOAI_PHONG.SO_GIUONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_GIUONGNull() {
                this[this.tableLOAI_PHONG.SO_GIUONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSO_LUONG_PHONGNull() {
                return this.IsNull(this.tableLOAI_PHONG.SO_LUONG_PHONGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSO_LUONG_PHONGNull() {
                this[this.tableLOAI_PHONG.SO_LUONG_PHONGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGIA_THAM_KHAONull() {
                return this.IsNull(this.tableLOAI_PHONG.GIA_THAM_KHAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGIA_THAM_KHAONull() {
                this[this.tableLOAI_PHONG.GIA_THAM_KHAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow[] GetPHONGRows() {
                if ((this.Table.ChildRelations["FK_PHONG_PHONG_THU_LOAI_PHO"] == null)) {
                    return new PHONGRow[0];
                }
                else {
                    return ((PHONGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PHONG_PHONG_THU_LOAI_PHO"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QUOC_GIARowChangeEvent : global::System.EventArgs {
            
            private QUOC_GIARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIARowChangeEvent(QUOC_GIARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUOC_GIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHACH_HANGRowChangeEvent : global::System.EventArgs {
            
            private KHACH_HANGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRowChangeEvent(KHACH_HANGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHIEU_THUE_PHONGRowChangeEvent : global::System.EventArgs {
            
            private PHIEU_THUE_PHONGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRowChangeEvent(PHIEU_THUE_PHONGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHIEU_THUE_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHACH_TRORowChangeEvent : global::System.EventArgs {
            
            private KHACH_TRORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORowChangeEvent(KHACH_TRORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_TRORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHONGRowChangeEvent : global::System.EventArgs {
            
            private PHONGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRowChangeEvent(PHONGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_PHONGRowChangeEvent : global::System.EventArgs {
            
            private LOAI_PHONGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRowChangeEvent(LOAI_PHONGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_PHONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QLKS.QLKSDataSet.QLKSDataSet_TSKHFilterRoomTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUOC_GIATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QUOC_GIATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUOC_GIA";
            tableMapping.ColumnMappings.Add("MA_QUOC_GIA", "MA_QUOC_GIA");
            tableMapping.ColumnMappings.Add("TEN_QUOC_GIA", "TEN_QUOC_GIA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[QUOC_GIA] WHERE (([MA_QUOC_GIA] = @Original_MA_QUOC_GIA) AND (" +
                "(@IsNull_TEN_QUOC_GIA = 1 AND [TEN_QUOC_GIA] IS NULL) OR ([TEN_QUOC_GIA] = @Orig" +
                "inal_TEN_QUOC_GIA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_QUOC_GIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_QUOC_GIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEN_QUOC_GIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_QUOC_GIA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEN_QUOC_GIA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_QUOC_GIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[QUOC_GIA] ([TEN_QUOC_GIA]) VALUES (@TEN_QUOC_GIA);\r\nSELECT MA_" +
                "QUOC_GIA, TEN_QUOC_GIA FROM QUOC_GIA WHERE (MA_QUOC_GIA = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEN_QUOC_GIA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_QUOC_GIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[QUOC_GIA] SET [TEN_QUOC_GIA] = @TEN_QUOC_GIA WHERE (([MA_QUOC_GIA] = @Original_MA_QUOC_GIA) AND ((@IsNull_TEN_QUOC_GIA = 1 AND [TEN_QUOC_GIA] IS NULL) OR ([TEN_QUOC_GIA] = @Original_TEN_QUOC_GIA)));
SELECT MA_QUOC_GIA, TEN_QUOC_GIA FROM QUOC_GIA WHERE (MA_QUOC_GIA = @MA_QUOC_GIA)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEN_QUOC_GIA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_QUOC_GIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_QUOC_GIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_QUOC_GIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEN_QUOC_GIA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_QUOC_GIA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEN_QUOC_GIA", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_QUOC_GIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_QUOC_GIA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MA_QUOC_GIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLKS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MA_QUOC_GIA, TEN_QUOC_GIA FROM dbo.QUOC_GIA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLKSDataSet_TSKHFilterRoom.QUOC_GIADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLKSDataSet_TSKHFilterRoom.QUOC_GIADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLKSDataSet_TSKHFilterRoom.QUOC_GIADataTable dataTable = new QLKSDataSet_TSKHFilterRoom.QUOC_GIADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLKSDataSet_TSKHFilterRoom.QUOC_GIADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLKSDataSet_TSKHFilterRoom dataSet) {
            return this.Adapter.Update(dataSet, "QUOC_GIA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MA_QUOC_GIA, string Original_TEN_QUOC_GIA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MA_QUOC_GIA));
            if ((Original_TEN_QUOC_GIA == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TEN_QUOC_GIA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TEN_QUOC_GIA) {
            if ((TEN_QUOC_GIA == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TEN_QUOC_GIA));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEN_QUOC_GIA, int Original_MA_QUOC_GIA, string Original_TEN_QUOC_GIA, int MA_QUOC_GIA) {
            if ((TEN_QUOC_GIA == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TEN_QUOC_GIA));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_MA_QUOC_GIA));
            if ((Original_TEN_QUOC_GIA == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TEN_QUOC_GIA));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(MA_QUOC_GIA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEN_QUOC_GIA, int Original_MA_QUOC_GIA, string Original_TEN_QUOC_GIA) {
            return this.Update(TEN_QUOC_GIA, Original_MA_QUOC_GIA, Original_TEN_QUOC_GIA, Original_MA_QUOC_GIA);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KHACH_HANGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHACH_HANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KHACH_HANG";
            tableMapping.ColumnMappings.Add("MA_KHACH_HANG", "MA_KHACH_HANG");
            tableMapping.ColumnMappings.Add("CMND", "CMND");
            tableMapping.ColumnMappings.Add("HO_CHIEU", "HO_CHIEU");
            tableMapping.ColumnMappings.Add("DIEN_THOAI", "DIEN_THOAI");
            tableMapping.ColumnMappings.Add("HIEU_LUC", "HIEU_LUC");
            tableMapping.ColumnMappings.Add("TEN_QUOC_GIA", "TEN_QUOC_GIA");
            tableMapping.ColumnMappings.Add("HO_TEN_KHACH_HANG", "HO_TEN_KHACH_HANG");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLKS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     DISTINCT(KHACH_HANG.MA_KHACH_HANG), QUOC_GIA.TEN_QUOC_GIA,KHACH_HANG.HO_KHACH_HANG 
+ ' ' +           KHACH_HANG.TEN_KHACH_HANG AS HO_TEN_KHACH_HANG,  KHACH_HANG.CMND,  KHACH_HANG.HO_CHIEU,
                  KHACH_HANG.DIEN_THOAI,  KHACH_HANG.HIEU_LUC   
FROM      dbo.KHACH_HANG,dbo.QUOC_GIA,dbo.PHIEU_THUE_PHONG
WHERE    PHIEU_THUE_PHONG.MA_KHACH_HANG = KHACH_HANG.MA_KHACH_HANG
AND         KHACH_HANG.MA_QUOC_GIA = QUOC_GIA.MA_QUOC_GIA
AND         KHACH_HANG.HIEU_LUC = 1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT *\r\nFROM dbo.KHACH_HANG\r\nWHERE HIEU_LUC = 1";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLKSDataSet_TSKHFilterRoom.KHACH_HANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLKSDataSet_TSKHFilterRoom.KHACH_HANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLKSDataSet_TSKHFilterRoom.KHACH_HANGDataTable dataTable = new QLKSDataSet_TSKHFilterRoom.KHACH_HANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> FillBy() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHIEU_THUE_PHONGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHIEU_THUE_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHIEU_THUE_PHONG";
            tableMapping.ColumnMappings.Add("MA_PHIEU", "MA_PHIEU");
            tableMapping.ColumnMappings.Add("MA_KHACH_HANG", "MA_KHACH_HANG");
            tableMapping.ColumnMappings.Add("MA_DOAN_KHACH", "MA_DOAN_KHACH");
            tableMapping.ColumnMappings.Add("NGAY_NHAN_PHONG", "NGAY_NHAN_PHONG");
            tableMapping.ColumnMappings.Add("NGAY_TRA_PHONG", "NGAY_TRA_PHONG");
            tableMapping.ColumnMappings.Add("DON_GIA_PHONG", "DON_GIA_PHONG");
            tableMapping.ColumnMappings.Add("GHI_CHU", "GHI_CHU");
            tableMapping.ColumnMappings.Add("THANH_TOAN_TIEN_PHONG", "THANH_TOAN_TIEN_PHONG");
            tableMapping.ColumnMappings.Add("THANH_TOAN_DICH_VU", "THANH_TOAN_DICH_VU");
            tableMapping.ColumnMappings.Add("DA_TRA_PHONG", "DA_TRA_PHONG");
            tableMapping.ColumnMappings.Add("SO_PHONG", "SO_PHONG");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLKS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   MA_PHIEU, MA_KHACH_HANG, MA_DOAN_KHACH, PHONG.SO_PHONG,NGAY_NHAN_PHONG, NGAY_TRA_PHONG, LOAI_PHONG.GIA_THAM_KHAO AS DON_GIA_PHONG, GHI_CHU, THANH_TOAN_TIEN_PHONG, THANH_TOAN_DICH_VU, DA_TRA_PHONG 
FROM    dbo.PHIEU_THUE_PHONG,dbo.PHONG,dbo.LOAI_PHONG
WHERE  PHIEU_THUE_PHONG.MA_PHONG = PHONG.MA_PHONG
AND      PHONG.MA_LOAI_PHONG = LOAI_PHONG.MA_LOAI_PHONG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLKSDataSet_TSKHFilterRoom.PHIEU_THUE_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLKSDataSet_TSKHFilterRoom.PHIEU_THUE_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLKSDataSet_TSKHFilterRoom.PHIEU_THUE_PHONGDataTable dataTable = new QLKSDataSet_TSKHFilterRoom.PHIEU_THUE_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KHACH_TROTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHACH_TROTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KHACH_TRO";
            tableMapping.ColumnMappings.Add("MA_KHACH_HANG", "MA_KHACH_HANG");
            tableMapping.ColumnMappings.Add("MA_PHIEU", "MA_PHIEU");
            tableMapping.ColumnMappings.Add("HO_KHACH_HANG", "HO_KHACH_HANG");
            tableMapping.ColumnMappings.Add("TEN_KHACH_HANG", "TEN_KHACH_HANG");
            tableMapping.ColumnMappings.Add("CMND", "CMND");
            tableMapping.ColumnMappings.Add("HO_CHIEU", "HO_CHIEU");
            tableMapping.ColumnMappings.Add("DIEN_THOAI", "DIEN_THOAI");
            tableMapping.ColumnMappings.Add("TEN_QUOC_GIA", "TEN_QUOC_GIA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLKS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT    KHACH_HANG.MA_KHACH_HANG,MA_PHIEU,KHACH_HANG.HO_KHACH_HANG,
                 KHACH_HANG.TEN_KHACH_HANG,KHACH_HANG.CMND,KHACH_HANG.HO_CHIEU,
                 KHACH_HANG.DIEN_THOAI,QUOC_GIA.TEN_QUOC_GIA
FROM dbo.KHACH_TRO,dbo.KHACH_HANG,dbo.QUOC_GIA
WHERE KHACH_TRO.MA_KHACH_HANG = KHACH_HANG.MA_KHACH_HANG
AND KHACH_HANG.MA_QUOC_GIA = QUOC_GIA.MA_QUOC_GIA
AND KHACH_HANG.HIEU_LUC = 1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLKSDataSet_TSKHFilterRoom.KHACH_TRODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLKSDataSet_TSKHFilterRoom.KHACH_TRODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLKSDataSet_TSKHFilterRoom.KHACH_TRODataTable dataTable = new QLKSDataSet_TSKHFilterRoom.KHACH_TRODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHONGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHONG";
            tableMapping.ColumnMappings.Add("MA_PHONG", "MA_PHONG");
            tableMapping.ColumnMappings.Add("MA_LOAI_PHONG", "MA_LOAI_PHONG");
            tableMapping.ColumnMappings.Add("MA_TINH_TRANG", "MA_TINH_TRANG");
            tableMapping.ColumnMappings.Add("SO_PHONG", "SO_PHONG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PHONG] WHERE (([MA_PHONG] = @Original_MA_PHONG) AND ((@IsNull_MA_LOAI_PHONG = 1 AND [MA_LOAI_PHONG] IS NULL) OR ([MA_LOAI_PHONG] = @Original_MA_LOAI_PHONG)) AND ((@IsNull_MA_TINH_TRANG = 1 AND [MA_TINH_TRANG] IS NULL) OR ([MA_TINH_TRANG] = @Original_MA_TINH_TRANG)) AND ((@IsNull_SO_PHONG = 1 AND [SO_PHONG] IS NULL) OR ([SO_PHONG] = @Original_SO_PHONG)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MA_TINH_TRANG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_TINH_TRANG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_TINH_TRANG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_TINH_TRANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PHONG] ([MA_LOAI_PHONG], [MA_TINH_TRANG], [SO_PHONG]) VALUES (" +
                "@MA_LOAI_PHONG, @MA_TINH_TRANG, @SO_PHONG);\r\nSELECT MA_PHONG, MA_LOAI_PHONG, MA_" +
                "TINH_TRANG, SO_PHONG FROM PHONG WHERE (MA_PHONG = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_TINH_TRANG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_TINH_TRANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PHONG] SET [MA_LOAI_PHONG] = @MA_LOAI_PHONG, [MA_TINH_TRANG] = @MA_TINH_TRANG, [SO_PHONG] = @SO_PHONG WHERE (([MA_PHONG] = @Original_MA_PHONG) AND ((@IsNull_MA_LOAI_PHONG = 1 AND [MA_LOAI_PHONG] IS NULL) OR ([MA_LOAI_PHONG] = @Original_MA_LOAI_PHONG)) AND ((@IsNull_MA_TINH_TRANG = 1 AND [MA_TINH_TRANG] IS NULL) OR ([MA_TINH_TRANG] = @Original_MA_TINH_TRANG)) AND ((@IsNull_SO_PHONG = 1 AND [SO_PHONG] IS NULL) OR ([SO_PHONG] = @Original_SO_PHONG)));
SELECT MA_PHONG, MA_LOAI_PHONG, MA_TINH_TRANG, SO_PHONG FROM PHONG WHERE (MA_PHONG = @MA_PHONG)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_TINH_TRANG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_TINH_TRANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MA_TINH_TRANG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_TINH_TRANG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_TINH_TRANG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_TINH_TRANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_PHONG", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MA_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLKS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MA_PHONG, MA_LOAI_PHONG, MA_TINH_TRANG, SO_PHONG FROM dbo.PHONG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLKSDataSet_TSKHFilterRoom.PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLKSDataSet_TSKHFilterRoom.PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLKSDataSet_TSKHFilterRoom.PHONGDataTable dataTable = new QLKSDataSet_TSKHFilterRoom.PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLKSDataSet_TSKHFilterRoom.PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLKSDataSet_TSKHFilterRoom dataSet) {
            return this.Adapter.Update(dataSet, "PHONG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MA_PHONG, global::System.Nullable<int> Original_MA_LOAI_PHONG, global::System.Nullable<int> Original_MA_TINH_TRANG, string Original_SO_PHONG) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MA_PHONG));
            if ((Original_MA_LOAI_PHONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MA_LOAI_PHONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_MA_TINH_TRANG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MA_TINH_TRANG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_PHONG == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SO_PHONG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> MA_LOAI_PHONG, global::System.Nullable<int> MA_TINH_TRANG, string SO_PHONG) {
            if ((MA_LOAI_PHONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MA_LOAI_PHONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MA_TINH_TRANG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(MA_TINH_TRANG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SO_PHONG == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SO_PHONG));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> MA_LOAI_PHONG, global::System.Nullable<int> MA_TINH_TRANG, string SO_PHONG, int Original_MA_PHONG, global::System.Nullable<int> Original_MA_LOAI_PHONG, global::System.Nullable<int> Original_MA_TINH_TRANG, string Original_SO_PHONG, int MA_PHONG) {
            if ((MA_LOAI_PHONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(MA_LOAI_PHONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MA_TINH_TRANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(MA_TINH_TRANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SO_PHONG == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SO_PHONG));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_MA_PHONG));
            if ((Original_MA_LOAI_PHONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_MA_LOAI_PHONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_MA_TINH_TRANG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_MA_TINH_TRANG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_PHONG == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SO_PHONG));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(MA_PHONG));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> MA_LOAI_PHONG, global::System.Nullable<int> MA_TINH_TRANG, string SO_PHONG, int Original_MA_PHONG, global::System.Nullable<int> Original_MA_LOAI_PHONG, global::System.Nullable<int> Original_MA_TINH_TRANG, string Original_SO_PHONG) {
            return this.Update(MA_LOAI_PHONG, MA_TINH_TRANG, SO_PHONG, Original_MA_PHONG, Original_MA_LOAI_PHONG, Original_MA_TINH_TRANG, Original_SO_PHONG, Original_MA_PHONG);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_PHONGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_PHONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_PHONG";
            tableMapping.ColumnMappings.Add("MA_LOAI_PHONG", "MA_LOAI_PHONG");
            tableMapping.ColumnMappings.Add("TEN_LOAI_PHONG", "TEN_LOAI_PHONG");
            tableMapping.ColumnMappings.Add("SO_GIUONG", "SO_GIUONG");
            tableMapping.ColumnMappings.Add("SO_LUONG_PHONG", "SO_LUONG_PHONG");
            tableMapping.ColumnMappings.Add("GIA_THAM_KHAO", "GIA_THAM_KHAO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LOAI_PHONG] WHERE (([MA_LOAI_PHONG] = @Original_MA_LOAI_PHONG) AND ((@IsNull_TEN_LOAI_PHONG = 1 AND [TEN_LOAI_PHONG] IS NULL) OR ([TEN_LOAI_PHONG] = @Original_TEN_LOAI_PHONG)) AND ((@IsNull_SO_GIUONG = 1 AND [SO_GIUONG] IS NULL) OR ([SO_GIUONG] = @Original_SO_GIUONG)) AND ((@IsNull_SO_LUONG_PHONG = 1 AND [SO_LUONG_PHONG] IS NULL) OR ([SO_LUONG_PHONG] = @Original_SO_LUONG_PHONG)) AND ((@IsNull_GIA_THAM_KHAO = 1 AND [GIA_THAM_KHAO] IS NULL) OR ([GIA_THAM_KHAO] = @Original_GIA_THAM_KHAO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEN_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_LOAI_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEN_LOAI_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_LOAI_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_GIUONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_GIUONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_GIUONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_GIUONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_LUONG_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_LUONG_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_LUONG_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_LUONG_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GIA_THAM_KHAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GIA_THAM_KHAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GIA_THAM_KHAO", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GIA_THAM_KHAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LOAI_PHONG] ([TEN_LOAI_PHONG], [SO_GIUONG], [SO_LUONG_PHONG], [GIA_THAM_KHAO]) VALUES (@TEN_LOAI_PHONG, @SO_GIUONG, @SO_LUONG_PHONG, @GIA_THAM_KHAO);
SELECT MA_LOAI_PHONG, TEN_LOAI_PHONG, SO_GIUONG, SO_LUONG_PHONG, GIA_THAM_KHAO FROM LOAI_PHONG WHERE (MA_LOAI_PHONG = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEN_LOAI_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_LOAI_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_GIUONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_GIUONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_LUONG_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_LUONG_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GIA_THAM_KHAO", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GIA_THAM_KHAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOAI_PHONG] SET [TEN_LOAI_PHONG] = @TEN_LOAI_PHONG, [SO_GIUONG] = @SO_GIUONG, [SO_LUONG_PHONG] = @SO_LUONG_PHONG, [GIA_THAM_KHAO] = @GIA_THAM_KHAO WHERE (([MA_LOAI_PHONG] = @Original_MA_LOAI_PHONG) AND ((@IsNull_TEN_LOAI_PHONG = 1 AND [TEN_LOAI_PHONG] IS NULL) OR ([TEN_LOAI_PHONG] = @Original_TEN_LOAI_PHONG)) AND ((@IsNull_SO_GIUONG = 1 AND [SO_GIUONG] IS NULL) OR ([SO_GIUONG] = @Original_SO_GIUONG)) AND ((@IsNull_SO_LUONG_PHONG = 1 AND [SO_LUONG_PHONG] IS NULL) OR ([SO_LUONG_PHONG] = @Original_SO_LUONG_PHONG)) AND ((@IsNull_GIA_THAM_KHAO = 1 AND [GIA_THAM_KHAO] IS NULL) OR ([GIA_THAM_KHAO] = @Original_GIA_THAM_KHAO)));
SELECT MA_LOAI_PHONG, TEN_LOAI_PHONG, SO_GIUONG, SO_LUONG_PHONG, GIA_THAM_KHAO FROM LOAI_PHONG WHERE (MA_LOAI_PHONG = @MA_LOAI_PHONG)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEN_LOAI_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_LOAI_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_GIUONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_GIUONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SO_LUONG_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_LUONG_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GIA_THAM_KHAO", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GIA_THAM_KHAO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEN_LOAI_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_LOAI_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEN_LOAI_PHONG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEN_LOAI_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_GIUONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_GIUONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_GIUONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_GIUONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SO_LUONG_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_LUONG_PHONG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SO_LUONG_PHONG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SO_LUONG_PHONG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GIA_THAM_KHAO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GIA_THAM_KHAO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GIA_THAM_KHAO", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GIA_THAM_KHAO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_LOAI_PHONG", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "MA_LOAI_PHONG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLKS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MA_LOAI_PHONG, TEN_LOAI_PHONG, SO_GIUONG, SO_LUONG_PHONG, GIA_THAM_KHAO FR" +
                "OM dbo.LOAI_PHONG";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLKSDataSet_TSKHFilterRoom.LOAI_PHONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLKSDataSet_TSKHFilterRoom.LOAI_PHONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLKSDataSet_TSKHFilterRoom.LOAI_PHONGDataTable dataTable = new QLKSDataSet_TSKHFilterRoom.LOAI_PHONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLKSDataSet_TSKHFilterRoom.LOAI_PHONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLKSDataSet_TSKHFilterRoom dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_PHONG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MA_LOAI_PHONG, string Original_TEN_LOAI_PHONG, global::System.Nullable<int> Original_SO_GIUONG, global::System.Nullable<int> Original_SO_LUONG_PHONG, global::System.Nullable<decimal> Original_GIA_THAM_KHAO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MA_LOAI_PHONG));
            if ((Original_TEN_LOAI_PHONG == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TEN_LOAI_PHONG));
            }
            if ((Original_SO_GIUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SO_GIUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_LUONG_PHONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_SO_LUONG_PHONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_GIA_THAM_KHAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_GIA_THAM_KHAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TEN_LOAI_PHONG, global::System.Nullable<int> SO_GIUONG, global::System.Nullable<int> SO_LUONG_PHONG, global::System.Nullable<decimal> GIA_THAM_KHAO) {
            if ((TEN_LOAI_PHONG == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TEN_LOAI_PHONG));
            }
            if ((SO_GIUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SO_GIUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SO_LUONG_PHONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SO_LUONG_PHONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((GIA_THAM_KHAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(GIA_THAM_KHAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEN_LOAI_PHONG, global::System.Nullable<int> SO_GIUONG, global::System.Nullable<int> SO_LUONG_PHONG, global::System.Nullable<decimal> GIA_THAM_KHAO, int Original_MA_LOAI_PHONG, string Original_TEN_LOAI_PHONG, global::System.Nullable<int> Original_SO_GIUONG, global::System.Nullable<int> Original_SO_LUONG_PHONG, global::System.Nullable<decimal> Original_GIA_THAM_KHAO, int MA_LOAI_PHONG) {
            if ((TEN_LOAI_PHONG == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TEN_LOAI_PHONG));
            }
            if ((SO_GIUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SO_GIUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((SO_LUONG_PHONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SO_LUONG_PHONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((GIA_THAM_KHAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(GIA_THAM_KHAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_MA_LOAI_PHONG));
            if ((Original_TEN_LOAI_PHONG == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TEN_LOAI_PHONG));
            }
            if ((Original_SO_GIUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_SO_GIUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_SO_LUONG_PHONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_SO_LUONG_PHONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_GIA_THAM_KHAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_GIA_THAM_KHAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(MA_LOAI_PHONG));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEN_LOAI_PHONG, global::System.Nullable<int> SO_GIUONG, global::System.Nullable<int> SO_LUONG_PHONG, global::System.Nullable<decimal> GIA_THAM_KHAO, int Original_MA_LOAI_PHONG, string Original_TEN_LOAI_PHONG, global::System.Nullable<int> Original_SO_GIUONG, global::System.Nullable<int> Original_SO_LUONG_PHONG, global::System.Nullable<decimal> Original_GIA_THAM_KHAO) {
            return this.Update(TEN_LOAI_PHONG, SO_GIUONG, SO_LUONG_PHONG, GIA_THAM_KHAO, Original_MA_LOAI_PHONG, Original_TEN_LOAI_PHONG, Original_SO_GIUONG, Original_SO_LUONG_PHONG, Original_GIA_THAM_KHAO, Original_MA_LOAI_PHONG);
        }
    }
}

#pragma warning restore 1591